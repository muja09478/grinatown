workflows:
  ios_appstore_autosign_grainflow:
    name: iOS App Store – GrainFlow (manual profile)
    max_build_duration: 60

    environment:
      xcode: 16.4
      groups:
        - appstore_connect
        - signing
      vars:
        XCODE_PROJECT: "GrainFlow.xcodeproj"
        XCODE_WORKSPACE: "GrainFlow.xcworkspace"
        XCODE_SCHEME: "GrainFlow"
        BUNDLE_ID: "com.GrainFlow.hamzimdin"
        EXPORT_METHOD: "app-store"

    scripts:
      - name: Install dependencies (CocoaPods if present)
        script: |
          set -euo pipefail
          if [ -f "Podfile" ]; then
            echo "Installing CocoaPods dependencies..."
            gem install cocoapods --no-document
            pod install
            echo "BUILD_TARGET=--workspace \"GrainFlow.xcworkspace\"" >> "$CM_ENV"
            echo "Using workspace for build"
          else
            echo "BUILD_TARGET=--project \"GrainFlow.xcodeproj\"" >> "$CM_ENV"
            echo "Using project for build"
          fi

      - name: Bump build number
        script: |
          set -euo pipefail
          agvtool new-version -all "$(date +%y%m%d%H%M)"

      - name: Import Distribution p12 into keychain
        script: |
          set -euo pipefail
          keychain initialize
          echo "$CERT_P12" | base64 --decode > dist.p12
          if [ -n "${CERT_PASSWORD:-}" ]; then
            keychain add-certificates --certificate dist.p12 --certificate-password "$CERT_PASSWORD"
          else
            keychain add-certificates --certificate dist.p12
          fi
          echo "== Code signing identities =="
          security find-identity -v -p codesigning || true
          security find-identity -v -p codesigning | grep -E -q "Apple Distribution|iPhone Distribution" \
            || { echo "ERROR: distribution identity not found in keychain"; exit 1; }

      - name: Build and export .ipa
        script: |
          set -euo pipefail
          
          # Загружаем переменные из предыдущих шагов
          if [ -f "$CM_ENV" ]; then
            source "$CM_ENV"
          fi
          
          # Проверяем, установлена ли переменная BUILD_TARGET
          if [ -z "${BUILD_TARGET:-}" ]; then
            echo "BUILD_TARGET not set, determining automatically..."
            if [ -f "Podfile" ] && [ -d "$XCODE_WORKSPACE" ]; then
              BUILD_TARGET="--workspace \"$XCODE_WORKSPACE\""
              echo "Using workspace: $BUILD_TARGET"
            else
              BUILD_TARGET="--project \"$XCODE_PROJECT\""
              echo "Using project: $BUILD_TARGET"
            fi
          fi
          
          echo "Building with target: $BUILD_TARGET"
          echo "Scheme: $XCODE_SCHEME"
          
          # Создаем директорию для сборки
          mkdir -p "$CM_BUILD_DIR/build"
          
          # Сборка архива
          eval "xcode-project build-archive \
            $BUILD_TARGET \
            --scheme \"$XCODE_SCHEME\" \
            --output \"$CM_BUILD_DIR/build/$XCODE_SCHEME.xcarchive\""
          
          # Экспорт IPA
          xcode-project export-archive \
            --archive-path "$CM_BUILD_DIR/build/$XCODE_SCHEME.xcarchive" \
            --output "$CM_BUILD_DIR/build" \
            --export-method "$EXPORT_METHOD"

      - name: Deploy to App Store Connect
        script: |
          set -euo pipefail
          IPA_PATH=$(find "$CM_BUILD_DIR/build" -name "*.ipa" | head -1)
          [ -n "$IPA_PATH" ] || { echo "No .ipa found in build dir"; exit 1; }
          echo "Found IPA: $IPA_PATH"
          
          echo "Available apps in App Store Connect:"
          app-store-connect apps list --json
          
          echo "Uploading to App Store Connect..."
          app-store-connect upload "$IPA_PATH"
